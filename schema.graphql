enum ListingStatus {
  ACTIVE
  SOLD
  CANCELLED 
}

enum StakingStatus{
  ACTIVE
  RENTED
  EXPIRED
}
enum OfferStatus{
  ACTIVE
  DECLINE
  ACCEPTED
  EXPIRED
  UNACTIVE
}

enum Category{
  ARTWORK,
  SPORTS,
  PHOTOGRAPHY,
  METAVERSE,
  CELEBRITY,
  RWANFT,
  EXPLICIT,
  OTHER
}

enum OfferForUserNftStatus{
  ACTIVE,
  ACCEPTED,
  DENIED,
  CANCELED,
  EXPIRED
}

enum ActionType{
  RENT,
  RENTED,
  LIST,
  SALE,
  MINT
}

type Listing @entity { 
  id: ID!
  seller: Bytes!
  token: Bytes!
  tokenId: BigInt!
  price: BigInt!
  tokenURI: String
  listingStatus:ListingStatus!
  tokenName: String!
  tokenDescription: String!
  hasOffer:Boolean!
  collectionId:BigInt
  collectionName:String

}

type StakingListing @entity { 
  id: ID!
  seller: Bytes!
  taker:Bytes
  token: Bytes!
  tokenId: BigInt!
  tokenURI: String
  stakingStatus:StakingStatus!
  tokenName: String!
  tokenDescription: String!
  colloteralWei:BigInt!
  premiumWei:BigInt!
  deadlineUTC:BigInt!
  hasOffer:Boolean!
  collectionName: String
  collectionId: BigInt
  startRentalUTC: BigInt
}

type StakingOffer @entity {
  id: ID!
  taker: Bytes!
  stakingId:BigInt!
  newOfferedColloteral:BigInt!
  newOfferedPremiumWei:BigInt!
  owner:Bytes!
  tokenURI: String
  tokenId: BigInt!
  tokenName:String
  tokenAdress: Bytes!
  offerStatus:OfferStatus!

}

type BuyingOffer @entity {
  id: ID!
  taker: Bytes!
  listingId:BigInt!
  newOfferedPrice:BigInt!
  owner:Bytes!
  tokenURI: String
  tokenId: BigInt!
  tokenName:String
  tokenAdress: Bytes!
  offerStatus:OfferStatus!
  
}

type Token @entity {
  id: ID!
  name:String!
  uri:String!
  description:String!
  tokenAdress:String
  creator:Bytes!
  owner:Bytes
  collectionId: BigInt!
  collection: Collection!
  collectionName: String!
  collectionCategory:Category!
  price:BigInt
  colloteral:BigInt
  premiumWei:BigInt 
  listingId:String
  stakingId:String
  hasOffer:Boolean!
  test:Boolean
}

type Collection @entity {
  id: ID!
  owner: Bytes!
  collectionName:String!
  collectionInfo:String!
  collectionUrl:String!
  collectionFeatureUrl:String!
  collectionBannerUrl:String!
  collectionCategory:Category!
  collectionVolume:BigInt!
  collectionItemsAmount:BigInt!
  tokens: [Token!]! @derivedFrom(field: "collection")
}

type OfferForUserNft @entity {
  id: ID!
  offerId: BigInt!
  collectionId:BigInt!
  offeredAmount:BigInt!
  offerStatus:OfferForUserNftStatus!
  from:Bytes
  to:Bytes
  tokenId:String!
  tokenUri:String!
  tokenName:String!
}

type Statistic @entity {
  id: ID!
  type:ActionType!
  name:String!
  uri:String
  price:BigInt
  from:Bytes
  to:Bytes
  timestamp:BigInt!
  collectionName:String
  collectionId:String
  collectionCategory:Category
}



